class AuthenticationMirrorClient{rsa=null;crypt=null;client={protocol:"",host:"",uri:"",url:""};keysBox={origin:{public:"",private:"",secret:"",signature:""},destiny:{public:"",signature:""}};formBox={origin:{reform:"",deform:"",raw:""},destiny:{reform:"",deform:"",raw:""}};reflex={origin:{public:"",cipher:"",body:{}},destiny:{public:"",cipher:"",body:{}}};constructor(){this.rsa=new RSA({keySize:4096}),this.crypt=new Crypt({md:"sha512"})}url(r=""){return this.client.uri=r||this.client.uri,this.client.protocol=window.location.protocol,this.client.host=window.location.host,this.client.url=this.client.protocol+"//"+this.client.host+this.client.uri,this.client.url}raw(r=""){return this.formBox.origin.raw=r||this.formBox.origin.raw}setReflex(r={}){return this.reflex={...this.reflex,...r}}match(t={}){if(!t.hasOwnProperty("origin")||t.origin.hasOwnProperty("cipher"))return t.hasOwnProperty("origin")&&t.origin.hasOwnProperty("cipher")?({origin:{public:i,cipher:o},destiny:{public:s,cipher:n}}=t,this.keysBox.origin={...this.keysBox.origin,public:i},this.keysBox.destiny={...this.keysBox.destiny,public:s},this.formBox.origin={...this.formBox.origin,deform:o},this.formBox.destiny={...this.formBox.destiny,deform:n},this.reflex):this.reflex={...this.reflex,...t};{let r=this.keysBox,e=this.formBox;t.origin.hasOwnProperty("private")&&(r=t);var{origin:{deform:i},destiny:{deform:s}}=e=t.origin.hasOwnProperty("reform")?t:e,{origin:{public:o},destiny:{public:n}}=r;return this.reflex.origin={...this.reflex.origin,cipher:i,public:o},this.reflex.destiny={...this.reflex.destiny,cipher:s,public:n},this.reflex}}async captureKeys(){try{var{publicKey:r,privateKey:e}=await this.rsa.generateKeyPairAsync(),t=this.parse(this.crypt.encrypt(r,"De@14@Jxfjm^MiKpQP6tzKSm83xpa*vfXRi2bSjvtSFGVbwU8Yy&9K*&soIT5ft&EIS"))["iv"],i=this.parse(await this.crypt.signature(e,t))["signature"];return this.keysBox.origin={public:r,private:e,secret:t,signature:i},this.keysBox}catch(r){return console.error("Não foi possível gerar o par de chaves: ",r),this.keysBox}}async writeKeys(){return localStorage.setItem("AuthenticateMirrorPublicKey",this.keysBox.origin.public),localStorage.setItem("AuthenticateMirrorPrivateKey",this.keysBox.origin.private),localStorage.setItem("AuthenticateMirrorSecretKey",this.keysBox.origin.secret),localStorage.setItem("AuthenticateMirrorSignature",this.keysBox.origin.signature),this.keysBox}async readKeys(){return this.keysBox.secret=await localStorage.getItem("AuthenticateMirrorSecretKey")||"",this.keysBox.public=await localStorage.getItem("AuthenticateMirrorPublicKey")||"",this.keysBox.private=await localStorage.getItem("AuthenticateMirrorPrivateKey")||"",this.keysBox.signature=await localStorage.getItem("AuthenticateMirrorSignature")||"",this.keysBox}async loadKeys(){return this.keysBox.origin.public.length<64&&await this.readKeys(),this.keysBox.origin.public.length<64&&(await this.captureKeys(),await this.writeKeys()),this.keysBox}async signature(r=""){try{if(this.keysBox.origin.private.length<64)return console.error("Erro, a chave privada não existe"),this.keysBox.origin.signature;var e=this.parseStr(this.raw(r)),t=this.parse(this.crypt.signature(this.keysBox.origin.private,e))["signature"];return this.keysBox.origin.signature=t}catch(r){return console.error("Nõ foi possível asinnar o dado: ",r),this.keysBox.origin.signature}}async verify(r=""){return this.crypt.verify(this.keysBox.origin.public,this.raw(r),this.keysBox.origin.signature)}async deform(r=""){try{var e=this.keysBox.destiny.public;if(e.length<64)return console.error("Erro, a chave publica não existe"),this.formBox.origin.deform;var t=this.parseStr(this.raw(r)),i=this.signature(t);return this.formBox.origin.deform=this.crypt.encrypt(e,t,i)}catch(r){return console.error("Error ao deforma um dado: ",r),this.formBox.origin.deform}}async reform(r=""){try{this.formBox.destiny.deform=r||this.formBox.destiny.deform;var e=this.keysBox.origin.private;if(e.length<64)return console.error("Erro, a chave privada não existe"),this.formBox.destiny.reform;var{message:t,signature:i}=this.crypt.decrypt(e,this.formBox.destiny.deform);return this.keysBox.destiny.signature=i,this.formBox.destiny.reform=this.parse(t)}catch(r){return console.error("Error ao tentar decifrar o dado"),this.formBox.destiny.reform}}config(r="GET",e=void 0){const t=new Headers;return t.append("Content-Type","application/json"),t.append("Accept-Charset","utf-8"),{mode:"cors",headers:t,method:r,body:e}}async send(r=""){try{var e=this.url(),t=this.config("POST",this.parseStr(this.setReflex(r))),i=new Request(e,t);const o=await fetch(i);var s=await o.json();return await this.setReflex(s)}catch(r){return console.error("Error ao tentar acessar o servidor: ",r),this.setReflex()}}async get(){try{var r=this.url(),e=this.config("GET"),t=new Request(r,e);const s=await fetch(t);var i=await s.json();return await this.setReflex(i)}catch(r){return console.error("Error ao tentar acessar o servidor: ",r),this.setReflex()}}async reflect(r=""){return this.url("/authentication/mirror/reflect"),await this.loadKeys(),this.setReflex(r),this.match(this.keysBox),await this.send(),this.reflex}async distort(r=""){return this.url("/authentication/mirror/distort"),this.setReflex(r),this.send()}parse(e=""){try{return JSON.parse(e)}catch(r){return e}}parseStr(e=""){if("string"==typeof e)return e;try{return JSON.stringify(e)}catch(r){return e}}}